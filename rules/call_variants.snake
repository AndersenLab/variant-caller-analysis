
rule call_variants:
    input:
        bam = "bam/{num}.{grouping}.snps.sorted.bam",
        idx = "bam/{num}.{grouping}.snps.sorted.bam.bai"
    output:
        vcf = temp(expand("vcf/{{num}}.{{grouping}}.{chrom}.{var_call}.vcf", chrom = chrom, var_call = var_call))
    threads: 8
    message: "Calling {threads}"
    shell:
        """
            parallel --verbose --max-procs 6 --gnu "samtools mpileup -v -g -f {reference} -r {{1}} {input.bam} | bcftools call -v {{2}} - > vcf/{wildcards.num}.{wildcards.grouping}.{{1}}.{{2}}.vcf" ::: {chrom} ::: {var_call}
            exit 0
        """


rule concat_variants:
    input: 
        expand("vcf/{{num}}.{{grouping}}.{chrom}.{{var_call}}.vcf", chrom = chrom, grouping = grouping)
    output:
        "vcf/{num,\d+}.{grouping}.{var_call}.vcf.gz" 
    shell:
        """
            bcftools concat {input} | bcftools view -O z > {output}
            exit 0
        """

rule index_variants:
    input:
        rules.concat_variants.output
    output:
        vcf_called_index = "vcf/{num}.{grouping}.{var_call}.vcf.gz.idx"
    shell:
        """
            bcftools index {input}
        """

