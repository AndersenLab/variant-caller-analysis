threads = 4

rule addsnvs:
    input:
        "varsets/{num,\d+}.snps.txt"
    output:
    	spiked_bam = temp("bam/{num,\d+}.snps.bam"),
        sorted_bam = "bam/{num,\d+}.individual.snps.sorted.bam",
        indices = "bam/{num,\d+}.individual.snps.sorted.bam.bai"
    threads: 8
    shell:
        """
            bamsurgeon/addsnv.py --reference {reference} \
            					 --tmpdir tmp \
            					 --procs {threads} \
            					 --maxdepth 2000 \
            					 --mindepth 1 \
            					 --mutfrac 1.0 \
            					 -v {input} \
            					 --bamfile {config[bam_location]} \
            					 --aligner mem \
            					 --picardjar tools/picard.jar \
            					 --outbam {output.spiked_bam}
            samtools sort -@ {threads} -T bam/{wildcards.num}.sorting -O bam {output.spiked_bam} > {output.sorted_bam}
            samtools index {output.sorted_bam}
        """


rule collate_snvs:
    input:
        "bam/{num}.individual.snps.sorted.bam",
        "bam/{num}.individual.snps.sorted.bam.bai"
    output:
        "spikeins/{num}.txt"
    shell:
        """
        mkdir -p spikeins
        for i in `ls -1 addsnv_logs_{wildcards.num}.snps.bam/*`; do
            grep "^snv" ${{i}}
            grep "^snv" ${{i}} >> {output}
        done;
        if [[ -s {output} ]]
        then
            exit 0;
        else
            exit 1;
        fi
        """

rule merge_joint_bams:
    # Merges in divergent panel of wild isolate variants
    input:
        primary_bam = "bam/{num}.individual.snps.sorted.bam",
        merge_bams = expand("{pf}/{bams}.bam",pf = config["joint_bam_path"],  bams = config["joint_bams"])
    output:
        "bam/{num}.joint.snps.sorted.bam"
    version: check_output("samtools --version", shell=True)
    shell:
        """
            samtools merge - {input.primary_bam} {input.merge_bams} | samtools sort -@ 6 -T {wildcards.num} -O bam > {output}
        """


rule index_joint_bam:
    input:
        "bam/{num}.joint.snps.sorted.bam"
    output:
        "bam/{num}.joint.snps.sorted.bam.bai"
    version: check_output("samtools --version", shell=True)
    shell:
        """
            samtools index {input}
        """