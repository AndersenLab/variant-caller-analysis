from glob import glob

rule addsnvs:
    input:
        "log/setup_genome.done",
        varset = "varsets/{num,\d+}.snps.txt"
    output:
        spiked_bam = temp("bam/{num,\d+}.snps.bam"),
    threads: 8
    shell:
        """
            python bamsurgeon/addsnv.py --reference {reference} \
                                 --tmpdir tmp \
                                 --procs {threads} \
                                 --maxdepth 2000 \
                                 --mindepth 1 \
                                 -m 1.0 \
                                 -v {input.varset} \
                                 --bamfile {config[bam_location]} \
                                 --aligner mem \
                                 --picardjar /lscr2/andersenlab/dec211/variant-caller-analysis/tools/picard.jar \
                                 --outbam {output.spiked_bam}

        """

rule sort_bam:
    input:
        spiked_bam = "bam/{num,\d+}.snps.bam"
    output:
        sorted_bam = "bam/{num,\d+}.individual.snps.sorted.bam"
    shell:
        """
            samtools sort -@ {threads} -T bam/{wildcards.num}.sorting -O bam {input.spiked_bam} > {output.sorted_bam}
        """

rule index_bam:
    input:
        sorted_bam = "bam/{num,\d+}.individual.snps.sorted.bam"
    output:
        indices = "bam/{num,\d+}.individual.snps.sorted.bam.bai"
    shell:
        """
            samtools index {input.sorted_bam}
        """


rule collate_snvs:
    input:
        "bam/{num}.individual.snps.sorted.bam",
        "bam/{num}.individual.snps.sorted.bam.bai"
    output:
        spiked = "spikeins/{num}.txt"
    run:
        with open(output.spiked , "w") as f:
            for addsnv_log in glob("addsnv_logs_{wildcards.num}.snps.bam/*".format(**locals())):
                with open(addsnv_log, "r") as addsnv:
                    for line in addsnv:
                        if 'snv' in line:
                            f.write(line)


rule merge_joint_bams:
    # Merges in divergent panel of wild isolate variants
    input:
        primary_bam = "bam/{num}.individual.snps.sorted.bam",
        merge_bams = expand("{pf}/{bams}.bam",pf = config["joint_bam_path"],  bams = config["joint_bams"])
    output:
        "bam/{num}.joint.snps.sorted.bam"
    version: str(check_output("samtools --version", shell=True))
    shell:
        "samtools merge - {input.primary_bam} {input.merge_bams} | samtools sort -@ 6 -T {wildcards.num} -O bam > {output}"


rule index_joint_bam:
    input:
        rules.merge_joint_bams.output
    output:
        "bam/{num}.joint.snps.sorted.bam.bai"
    version: str(check_output("samtools --version", shell=True))
    shell:
        "samtools index {input}"
